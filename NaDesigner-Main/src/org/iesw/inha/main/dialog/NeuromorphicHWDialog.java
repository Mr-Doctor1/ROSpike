/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.iesw.inha.main.dialog;

import java.io.File;
import javax.swing.JFileChooser;
import javax.xml.ws.Action;
import org.iesw.inha.NeuromorphicHW;
import org.iesw.inha.generator.ai.HSNNGenerator;
import org.iesw.inha.generator.ai.HSNNGeneratorJS;
import org.iesw.inha.generator.ai.HSNNHardwareGenerator;
import org.iesw.inha.ioconfig.ai.HSNNIOConfig;
import org.openide.filesystems.FileUtil;

/**
 *
 * @author SeoyeonKim
 */
public class NeuromorphicHWDialog extends javax.swing.JDialog {

    /**
     * Creates new form NeuromorphicHWDialog
     */
    
    public static final int H_SNN = 1;
    
    private static final int DE1 = 0;
    private static final int PYNQ = 1;
    private static final int LOIHI = 2;
            
    
    private static boolean LOADDATA = false;    
    private static boolean LOADLIB = false;  
    
    private static File libDir = new File(""); 
    private static File srcDir = new File("");  
    private static File srcFile = new File("");  
    private static File destDir = new File(""); 
    private static File destLib = new File("");  
    private static String loadDir = ""; 
    
    private static final String userDir = System.getenv("USERPROFILE");
    private static final String ndPrjDir = userDir + File.separatorChar + "Documents"+File.separatorChar+"NaDesigner"+File.separatorChar+"Projects";
    
    
    private JFileChooser fileChooser = new JFileChooser();
    private HSNNIOConfig hSIOConf = new HSNNIOConfig();
    private HSNNGeneratorJS hSNNGenJ = new HSNNGeneratorJS();
    private HSNNGenerator hSNNGen = new HSNNGenerator();
    private HSNNHardwareGenerator hSNNHWGen = new HSNNHardwareGenerator(); 
    
    private String[] params;
    private String hDirectory="";
    
    private NeuromorphicHW neuroHW;
    
    
    public NeuromorphicHWDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public NeuromorphicHWDialog(java.awt.Frame parent, boolean modal, String hDir) {
        super(parent, modal);
        hDirectory = hDir;
        initComponents();
//        myInitComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        neuronModelPanel = new javax.swing.JPanel();
        neuronModelLabel = new javax.swing.JLabel();
        maxRateLabel = new javax.swing.JLabel();
        synapseLabel = new javax.swing.JLabel();
        interceptsLabel = new javax.swing.JLabel();
        neuronTypeComboBox = new javax.swing.JComboBox();
        maxRateTextField = new javax.swing.JTextField();
        synapseTextField = new javax.swing.JTextField();
        interceptsTextField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        accuracyLabel = new javax.swing.JLabel();
        accuracyTextField = new javax.swing.JTextField();
        executionTimeLabel = new javax.swing.JLabel();
        executionTimeTextField = new javax.swing.JTextField();
        runButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        layerLabel = new javax.swing.JLabel();
        neuronLabel = new javax.swing.JLabel();
        datasizeLabel = new javax.swing.JLabel();
        layerNumLabel = new javax.swing.JLabel();
        neuronNumLabel = new javax.swing.JLabel();
        datasizeNumLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        libraryDirTextField = new javax.swing.JTextField();
        libraryDirBrowseButton = new javax.swing.JButton();
        hardwareLabel = new javax.swing.JLabel();
        hardwareComboBox = new javax.swing.JComboBox();
        loadDataPanel = new javax.swing.JPanel();
        loadDataFromFileCheckBox = new javax.swing.JCheckBox();
        modelFileLabel = new javax.swing.JLabel();
        modelFileTextField = new javax.swing.JTextField();
        DelimiterLabel = new javax.swing.JLabel();
        delimiterComboBox = new javax.swing.JComboBox();
        IncludeFirstLineCheckBox = new javax.swing.JCheckBox();
        fileDirBrowseButton = new javax.swing.JButton();
        xRangeLabel = new javax.swing.JLabel();
        xRangeField1 = new javax.swing.JTextField();
        toRabel1 = new javax.swing.JLabel();
        xRangeField2 = new javax.swing.JTextField();
        yRangeLabel = new javax.swing.JLabel();
        yRangeField1 = new javax.swing.JTextField();
        toRabel2 = new javax.swing.JLabel();
        yRangeField2 = new javax.swing.JTextField();
        generateButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.title")); // NOI18N

        neuronModelPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.neuronModelPanel.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(neuronModelLabel, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.neuronModelLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(maxRateLabel, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.maxRateLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(synapseLabel, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.synapseLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(interceptsLabel, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.interceptsLabel.text")); // NOI18N

        neuronTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Spiking Rectified", "Rectified Linear" }));

        maxRateTextField.setText(org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.maxRateTextField.text")); // NOI18N

        synapseTextField.setText(org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.synapseTextField.text")); // NOI18N

        interceptsTextField.setText(org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.interceptsTextField.text")); // NOI18N

        javax.swing.GroupLayout neuronModelPanelLayout = new javax.swing.GroupLayout(neuronModelPanel);
        neuronModelPanel.setLayout(neuronModelPanelLayout);
        neuronModelPanelLayout.setHorizontalGroup(
            neuronModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(neuronModelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(neuronModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(maxRateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(neuronModelLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(neuronModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(maxRateTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(neuronTypeComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(neuronModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(neuronModelPanelLayout.createSequentialGroup()
                        .addComponent(synapseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(synapseTextField))
                    .addGroup(neuronModelPanelLayout.createSequentialGroup()
                        .addComponent(interceptsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(interceptsTextField)))
                .addContainerGap())
        );
        neuronModelPanelLayout.setVerticalGroup(
            neuronModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(neuronModelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(neuronModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(neuronModelLabel)
                    .addComponent(neuronTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(synapseLabel)
                    .addComponent(synapseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(neuronModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maxRateLabel)
                    .addComponent(maxRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(interceptsLabel)
                    .addComponent(interceptsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.jPanel1.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(accuracyLabel, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.accuracyLabel.text")); // NOI18N

        accuracyTextField.setText(org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.accuracyTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(executionTimeLabel, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.executionTimeLabel.text")); // NOI18N

        executionTimeTextField.setText(org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.executionTimeTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(runButton, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.runButton.text")); // NOI18N
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(accuracyLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(accuracyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(executionTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(executionTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(runButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accuracyLabel)
                    .addComponent(accuracyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(executionTimeLabel)
                    .addComponent(executionTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(runButton))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.jPanel2.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(layerLabel, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.layerLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(neuronLabel, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.neuronLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(datasizeLabel, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.datasizeLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(layerNumLabel, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.layerNumLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(neuronNumLabel, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.neuronNumLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(datasizeNumLabel, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.datasizeNumLabel.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(layerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(layerNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(neuronLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(neuronNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(datasizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(datasizeNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(layerLabel)
                    .addComponent(layerNumLabel)
                    .addComponent(neuronLabel)
                    .addComponent(neuronNumLabel)
                    .addComponent(datasizeLabel)
                    .addComponent(datasizeNumLabel))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.jPanel3.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.jLabel4.text")); // NOI18N

        libraryDirTextField.setEditable(false);
        libraryDirTextField.setText(org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.libraryDirTextField.text")); // NOI18N
        libraryDirTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        //modelDirTextField.setText(hDirectory);

        org.openide.awt.Mnemonics.setLocalizedText(libraryDirBrowseButton, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.libraryDirBrowseButton.text")); // NOI18N
        libraryDirBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                libraryDirBrowseButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(hardwareLabel, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.hardwareLabel.text")); // NOI18N

        hardwareComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DE1-SoC", "PYNQ", "Loihi" }));
        hardwareComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hardwareComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(hardwareLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hardwareComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(libraryDirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(libraryDirBrowseButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hardwareLabel)
                    .addComponent(hardwareComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(libraryDirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(libraryDirBrowseButton)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        loadDataPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.loadDataPanel.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(loadDataFromFileCheckBox, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.loadDataFromFileCheckBox.text")); // NOI18N
        loadDataFromFileCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                loadDataFromFileCheckBoxItemStateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(modelFileLabel, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.modelFileLabel.text")); // NOI18N

        modelFileTextField.setEditable(false);
        modelFileTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        modelFileTextField.setPreferredSize(new java.awt.Dimension(152, 21));

        org.openide.awt.Mnemonics.setLocalizedText(DelimiterLabel, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.DelimiterLabel.text")); // NOI18N
        DelimiterLabel.setEnabled(false);

        delimiterComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { ",", ";", "space", "tab" }));
        delimiterComboBox.setEnabled(false);
        delimiterComboBox.setMinimumSize(new java.awt.Dimension(83, 23));
        delimiterComboBox.setPreferredSize(new java.awt.Dimension(83, 23));

        org.openide.awt.Mnemonics.setLocalizedText(IncludeFirstLineCheckBox, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.IncludeFirstLineCheckBox.text")); // NOI18N
        IncludeFirstLineCheckBox.setEnabled(false);

        org.openide.awt.Mnemonics.setLocalizedText(fileDirBrowseButton, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.fileDirBrowseButton.text")); // NOI18N
        fileDirBrowseButton.setActionCommand(org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.fileDirBrowseButton.actionCommand")); // NOI18N
        fileDirBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileDirBrowseButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(xRangeLabel, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.xRangeLabel.text")); // NOI18N
        xRangeLabel.setEnabled(false);

        xRangeField1.setText(org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.xRangeField1.text")); // NOI18N
        xRangeField1.setEnabled(false);

        org.openide.awt.Mnemonics.setLocalizedText(toRabel1, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.toRabel1.text")); // NOI18N
        toRabel1.setEnabled(false);

        xRangeField2.setText(org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.xRangeField2.text")); // NOI18N
        xRangeField2.setEnabled(false);

        org.openide.awt.Mnemonics.setLocalizedText(yRangeLabel, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.yRangeLabel.text")); // NOI18N
        yRangeLabel.setEnabled(false);

        yRangeField1.setText(org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.yRangeField1.text")); // NOI18N
        yRangeField1.setEnabled(false);

        org.openide.awt.Mnemonics.setLocalizedText(toRabel2, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.toRabel2.text")); // NOI18N
        toRabel2.setEnabled(false);

        yRangeField2.setText(org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.yRangeField2.text")); // NOI18N
        yRangeField2.setEnabled(false);

        javax.swing.GroupLayout loadDataPanelLayout = new javax.swing.GroupLayout(loadDataPanel);
        loadDataPanel.setLayout(loadDataPanelLayout);
        loadDataPanelLayout.setHorizontalGroup(
            loadDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loadDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loadDataPanelLayout.createSequentialGroup()
                        .addComponent(IncludeFirstLineCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(xRangeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(xRangeField1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(toRabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(xRangeField2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(yRangeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(yRangeField1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(toRabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(yRangeField2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))
                    .addGroup(loadDataPanelLayout.createSequentialGroup()
                        .addGroup(loadDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(loadDataPanelLayout.createSequentialGroup()
                                .addComponent(loadDataFromFileCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(DelimiterLabel))
                            .addGroup(loadDataPanelLayout.createSequentialGroup()
                                .addComponent(modelFileLabel)
                                .addGap(29, 29, 29)
                                .addComponent(modelFileTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(loadDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(loadDataPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(delimiterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loadDataPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fileDirBrowseButton)))
                        .addContainerGap())))
        );
        loadDataPanelLayout.setVerticalGroup(
            loadDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loadDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(loadDataFromFileCheckBox)
                    .addComponent(DelimiterLabel)
                    .addComponent(delimiterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(loadDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(fileDirBrowseButton)
                    .addComponent(modelFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modelFileLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(loadDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(IncludeFirstLineCheckBox)
                    .addComponent(xRangeLabel)
                    .addComponent(xRangeField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toRabel1)
                    .addComponent(xRangeField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yRangeLabel)
                    .addComponent(yRangeField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toRabel2)
                    .addComponent(yRangeField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.openide.awt.Mnemonics.setLocalizedText(generateButton, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.generateButton.text")); // NOI18N
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(cancelButton, org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.cancelButton.text")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(neuronModelPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(loadDataPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(generateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(loadDataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(neuronModelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generateButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        jPanel1.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.jPanel1.AccessibleContext.accessibleName")); // NOI18N

        getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(NeuromorphicHWDialog.class, "NeuromorphicHWDialog.AccessibleContext.accessibleName")); // NOI18N

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void myInitComponents(){
        LOADDATA = false;
        LOADLIB = false; 
        libDir = new File("");    
        srcDir = new File(hDirectory + File.separatorChar);   
        srcFile = new File("");
        destDir = new File(hDirectory + File.separatorChar + "src" + File.separatorChar + "DataSets"); /*--- Jaehee Kim 2020.10.08 수정 ---*/
        
    }
    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        // TODO add your handling code here:
        int hw = hardwareComboBox.getSelectedIndex();
        String Uacc = accuracyTextField.getText();
        String Ut = executionTimeTextField.getText();
        neuroHW = new NeuromorphicHW(hw, Uacc, Ut);
        String param = "";
        param = neuroHW.getParam();
        System.out.println("Dialog:"+param);
        if (param != null && !param.isEmpty()){
            params = param.split("\\s");
            layerNumLabel.setText(params[0]);
            neuronNumLabel.setText(params[1]);
            datasizeNumLabel.setText(params[2]);
        }
        else{
            System.out.println("Neuromorphic HW Parameter Load Error!!");
        }
    }//GEN-LAST:event_runButtonActionPerformed

//    private void 
    private void libraryDirBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_libraryDirBrowseButtonActionPerformed
        evt.setSource(libraryDirBrowseButton);
        selectDirectory(evt);
    }//GEN-LAST:event_libraryDirBrowseButtonActionPerformed

    private void loadDataFromFileCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_loadDataFromFileCheckBoxItemStateChanged
        if (loadDataFromFileCheckBox.isSelected()) {
            modelFileTextField.setEnabled(true);
            DelimiterLabel.setEnabled(true);
            delimiterComboBox.setEnabled(true);
            fileDirBrowseButton.setEnabled(true);
            modelFileLabel.setEnabled(true);
            IncludeFirstLineCheckBox.setEnabled(true);
            toRabel1.setEnabled(true);
            toRabel2.setEnabled(true);
            xRangeField1.setEnabled(true);
            xRangeField2.setEnabled(true);
            xRangeLabel.setEnabled(true);
            yRangeField1.setEnabled(true);
            yRangeField2.setEnabled(true);
            yRangeLabel.setEnabled(true);

        } else {
            DelimiterLabel.setEnabled(false);
            delimiterComboBox.setEnabled(false);
            IncludeFirstLineCheckBox.setEnabled(false);
            toRabel1.setEnabled(false);
            toRabel2.setEnabled(false);
            xRangeField1.setEnabled(false);
            xRangeField2.setEnabled(false);
            xRangeLabel.setEnabled(false);
            yRangeField1.setEnabled(false);
            yRangeField2.setEnabled(false);
            yRangeLabel.setEnabled(false);
        }
    }//GEN-LAST:event_loadDataFromFileCheckBoxItemStateChanged

    private void fileDirBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileDirBrowseButtonActionPerformed
        if(loadDataFromFileCheckBox.isSelected())
        selectFile();
        else{
            evt.setSource(fileDirBrowseButton);
            selectDirectory(evt);
        }
    }//GEN-LAST:event_fileDirBrowseButtonActionPerformed

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        // TODO add your handling code here:
        initIOConf();
        generateSNNHardwareSource();
        
    }//GEN-LAST:event_generateButtonActionPerformed

    private void hardwareComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hardwareComboBoxActionPerformed
        // TODO add your handling code here:
        if (hardwareComboBox.getSelectedIndex()==LOIHI){
            UiLoihi();
        }
        else{
            UiHW();
        }
    }//GEN-LAST:event_hardwareComboBoxActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        cancel();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void initIOConf(){
        String hw;
        if(hardwareComboBox.getSelectedIndex() == DE1)
            hw = "DE1";
        else if(hardwareComboBox.getSelectedIndex() == PYNQ)
            hw = "PYNQ";
        else
            hw = "Loihi";
        hSIOConf.setBoards(hw);
//        hSIOConf.setInput(datasizeNumLabel.getText()+","+datasizeNumLabel.getText());
        hSIOConf.setMax_rates(Integer.parseInt(maxRateTextField.getText()));
        hSIOConf.setNeuron_type((String)neuronTypeComboBox.getSelectedItem());
        hSIOConf.setIntercepts(Double.parseDouble(interceptsTextField.getText()));
        hSIOConf.setSynapse(synapseTextField.getText());
        hSIOConf.setLayers(params[0]);
        hSIOConf.setNeurons(params[1]);
        hSIOConf.setDataSize(params[2]);
        
    }
    
    private void generateSNNHardwareSource(){ 
        hSNNHWGen.initConfig(hSIOConf);
        hSIOConf.setUserRequirement(1);
        hSNNHWGen.hSTATE = H_SNN;
        hSNNHWGen.createFile(hDirectory);
        hSNNHWGen.writeNeuroHWGen();
    }
    
    @Action
    public void cancel() {
        this.dispose();
    }
    
    public void selectDirectory(java.awt.event.ActionEvent evt) {
        String title="Select Project Location";
        String path = "";
        int evtDir = 0; 
        
        if(evt.getSource() == libraryDirBrowseButton ){
            title = "Select Library Location";
            evtDir = 1;
        }
        else if(evt.getSource() == fileDirBrowseButton ){
            evtDir = 0;
            title = "Select Data Location";
        }
        
        FileUtil.preventFileChooserSymlinkTraversal(fileChooser, null);
        fileChooser.setDialogTitle(title);
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if(evtDir ==1)
            path = libraryDirTextField.getText();
        
        if (path.length() > 0) {
            File f = new File(path);
            if (f.exists()) {
                fileChooser.setSelectedFile(f);
            }
        }
        if (JFileChooser.APPROVE_OPTION == fileChooser.showOpenDialog(this)) {
            File projectDir = fileChooser.getSelectedFile();
            if(evtDir ==1){
                libraryDirTextField.setText(FileUtil.normalizeFile(projectDir).getAbsolutePath());
            }else{
                modelFileTextField.setText(FileUtil.normalizeFile(projectDir).getAbsolutePath());
            }
            
        }
    }
    
    private void selectFile() {
        FileUtil.preventFileChooserSymlinkTraversal(fileChooser, null);
        fileChooser.setDialogTitle("Load File");
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        String path = ndPrjDir;
        if (path.length() > 0) {
            File f = new File(path);
            if (f.exists()) {
                fileChooser.setSelectedFile(f);
            }
        }
        if (JFileChooser.APPROVE_OPTION == fileChooser.showOpenDialog(this)) {
            File fileDir = fileChooser.getSelectedFile();
            modelFileTextField.setText(FileUtil.normalizeFile(fileDir).getAbsolutePath());
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NeuromorphicHWDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NeuromorphicHWDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NeuromorphicHWDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NeuromorphicHWDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NeuromorphicHWDialog dialog = new NeuromorphicHWDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    private void UiHW(){
        libraryDirTextField.setEnabled(true);
        libraryDirBrowseButton.setEnabled(true);
        interceptsTextField.setText("-0.5");
        executionTimeTextField.setEnabled(true);
        if(hardwareComboBox.getSelectedIndex() == DE1)
            executionTimeTextField.setText("0.4");
        else
            executionTimeTextField.setText("0.9");
        
    }
    private void UiLoihi(){
        libraryDirTextField.setEnabled(false);
        libraryDirBrowseButton.setEnabled(false);
        interceptsTextField.setText("0");
        executionTimeTextField.setEnabled(false);
        executionTimeTextField.setText("0");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DelimiterLabel;
    private javax.swing.JCheckBox IncludeFirstLineCheckBox;
    private javax.swing.JLabel accuracyLabel;
    private javax.swing.JTextField accuracyTextField;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel datasizeLabel;
    private javax.swing.JLabel datasizeNumLabel;
    private javax.swing.JComboBox delimiterComboBox;
    private javax.swing.JLabel executionTimeLabel;
    private javax.swing.JTextField executionTimeTextField;
    private javax.swing.JButton fileDirBrowseButton;
    private javax.swing.JButton generateButton;
    private javax.swing.JComboBox hardwareComboBox;
    private javax.swing.JLabel hardwareLabel;
    private javax.swing.JLabel interceptsLabel;
    private javax.swing.JTextField interceptsTextField;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel layerLabel;
    private javax.swing.JLabel layerNumLabel;
    private javax.swing.JButton libraryDirBrowseButton;
    private javax.swing.JTextField libraryDirTextField;
    private javax.swing.JCheckBox loadDataFromFileCheckBox;
    private javax.swing.JPanel loadDataPanel;
    private javax.swing.JLabel maxRateLabel;
    private javax.swing.JTextField maxRateTextField;
    private javax.swing.JLabel modelFileLabel;
    private javax.swing.JTextField modelFileTextField;
    private javax.swing.JLabel neuronLabel;
    private javax.swing.JLabel neuronModelLabel;
    private javax.swing.JPanel neuronModelPanel;
    private javax.swing.JLabel neuronNumLabel;
    private javax.swing.JComboBox neuronTypeComboBox;
    private javax.swing.JButton runButton;
    private javax.swing.JLabel synapseLabel;
    private javax.swing.JTextField synapseTextField;
    private javax.swing.JLabel toRabel1;
    private javax.swing.JLabel toRabel2;
    private javax.swing.JTextField xRangeField1;
    private javax.swing.JTextField xRangeField2;
    private javax.swing.JLabel xRangeLabel;
    private javax.swing.JTextField yRangeField1;
    private javax.swing.JTextField yRangeField2;
    private javax.swing.JLabel yRangeLabel;
    // End of variables declaration//GEN-END:variables
}
